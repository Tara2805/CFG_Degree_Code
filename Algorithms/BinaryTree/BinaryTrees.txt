FEW QUICK NOTES

data structure

Graphs
Kind of like a tree, but with no root node
So a tree is a graph (interconnected nodes, with one
node being the ‘root’), though a graph isn’t a tree in
contrast (interconnected nodes but no root node)
Trees are better for hierarchical (family trees, video
games, decision making) or sorted data storage (Binary
search trees) whilst graphs are better for ‘storing’
networks

TREE DATA STRUCTURE

● Trees are types of
data structures that
represent nodes
connected by edges.
● Each tree consists of
a root node as the
Parent node, and the
left node and right
node as Child nodes.

WHY IS IT EVEN CALLED A TREE?

First - why is it actually called a tree?

- It is unlike an actual tree - with the root
at the top, and the rest of the tree growing
downwards; consider the left side for a
answer
- Regardless of the tree type, and the
direction it grows (downwards is
convention), a tree is a tree as long as it
has a root and the structure resembles
the left-side (e.g. leave nodes, root node,
etc)

BINARY TREE

BT - is a tree whose elements have at most two children.

● K-ary Tree - a tree
whose nodes have up
to k child-nodes. A
binary tree is a k-ary
tree where k == 2.

PERFECT BINARY TREE

● Perfect Binary tree
is a binary tree
whose interior nodes
all have two child
nodes

COMPLETE BINARY TREE

● A complete binary
tree is a binary tree
in which every level,
except possibly the
last, is completely
filled, and all nodes
are as far left as
possible.

‘INCOMPLETE’ BINARY TREE

● This is an example
of incomplete binary
tree, because the
nodes in its last level
are not as far left as
possible.

BALANCED BINARY TREE

● A binary tree in which
the left and right
subtrees of every node
differ in height by no
more than 1

IMBALANCED BINARY TREE

● 1 node per node

FULL BINARY TREE

● A full binary tree
(sometimes proper
binary tree or 2-tree)
is a tree in which every
node other than the
leaves has two
children.

APPLICATION OF BINARY TREES

1. Manipulate hierarchical data.
2. Make information easy to search.
3. Manipulate sorted lists of data.
4. Compositing digital images for visual effects.
5. Router algorithms
6. Form of a multi-stage decision-making.

USAGE OF BT EXAMPLES

● Chess algorithms
● 3-D Video Games
● Filing and document
storage in memory

Binary Search Tree Binary Search

Tree
A Binary Tree
with a ‘value
ordering rule’.
All nodes on the
left-hand side
must have a
smaller value
All nodes on the
right-hand side
must have a
bigger (or equal)
value
Every single
node must
follow the above
property

Binary Search Tree (continued) To clarify – a
Binary Search
Tree is a Binary
Tree with this
special property
enforced.
Why have a BST?
Amazing
performance
Searching,
Insertion, etc have
a O (Log N)
performance
Trying to find a
element? Your
‘search space’
(number of nodes
to search) is
halved each time –
hence log N.

